Topic: Introduction

Section: Multiple Choice Questions
1. Which of the following is the primary role of Matplotlib in a typical Machine Learning workflow?
a) Data storage and management
b) Numerical computation and array manipulation
c) Data visualization and graphical representation
d) Model deployment and serving
2. The most commonly used module from the Matplotlib library for creating 2D plots is:
a) matplotlib.numpy
b) matplotlib.pandas
c) matplotlib.pyplot
d) matplotlib.seaborn
3. Which function in matplotlib.pyplot is specifically used to draw a line plot for given data points?
a) plot_line()
b) draw_line()
c) plot()
d) line_graph()
4. To permanently save a Matplotlib plot to a file, such as a PDF, which function should be used?
a) plt.export()
b) plt.save()
c) plt.savefig()
d) plt.save_plot()
5. When creating a bar chart using matplotlib.pyplot, which function is typically employed?
a) plt.plot_bar()
b) plt.bar()
c) plt.histogram()
d) plt.column_chart()
6. What is the main purpose of the matplotlib.pyplot.show() function?
a) To clear the current plot
b) To save the plot to disk
c) To display the generated plot on the screen
d) To add a legend to the plot
7. Which function is used to add a label to the horizontal axis of a Matplotlib plot?
a) plt.label_x()
b) plt.xaxis_label()
c) plt.xlabel()
d) plt.set_xlabel()
8. The function matplotlib.pyplot.grid(True) is used to:
a) Turn off the grid on the plot
b) Make the plot background transparent
c) Display a grid on the plot
d) Arrange multiple plots in a grid layout
Section: Short Answer and True/False Questions
9. State one primary reason why data visualization is crucial in the initial stages of a Machine Learning project.
10. True or False: Matplotlib is primarily designed for advanced 3D rendering and animations.
11. Describe the purpose of the matplotlib.pyplot.subplot() function.
12. To create a histogram of a dataset, which specific function from the pyplot module would you use?
13. True or False: The matplotlib.pyplot.ylabel() function is used to add a title to the entire plot.
14. What type of chart is typically created using the matplotlib.pyplot.pie() function?
15. True or False: Matplotlib is exclusively used for static image generation and does not support interactive plots.


Topic: Pyplot.plot: plot()

Section: Multiple Choice Questions
16. Which of the following is the primary purpose of the pyplot.plot() function in Matplotlib?
(a) To create bar charts for categorical data.
(b) To draw lines and/or markers connecting data points on a 2D plane.
(c) To generate 3D surface plots for complex datasets.
(d) To display images from numerical arrays.
17. To plot a simple line graph showing data points (1, 2), (2, 4), and (3, 6), which arguments are typically passed to plt.plot()?
(a) A single list of y-values only.
(b) Two lists, one for x-values and one for y-values.
(c) Three lists, one for x-values, one for y-values, and one for z-values.
(d) A string representing the data source file path.
18. Consider the following code snippet:
import matplotlib.pyplot as plt
plt.plot([1, 2, 3])
plt.show()
What will be the x-axis values in the resulting plot?
(a) 0, 1, 2
(b) 1, 2, 3
(c) The indices of the list elements plus one.
(d) An empty range, as x-values are not explicitly provided.
19. Which parameter is used in plt.plot() to specify the color of the line?
(a) type
(b) line_color
(c) c
(d) color
20. To display circular markers at each data point along with a dashed line, which format string or keyword arguments would you use in plt.plot()?
(a) 'o--'
(b) marker='circle', linestyle='dashed'
(c) 'circle-dashed'
(d) 'c--'
21. If you want to plot two different sets of (x, y) data on the same axes, how can you achieve this using plt.plot()?
(a) Call plt.plot() once with both datasets combined into a single larger list.
(b) Call plt.plot() twice, once for each dataset, before calling plt.show().
(c) Use a separate subplot for each dataset to avoid overlapping.
(d) This functionality is not available directly with plt.plot(); you must use a different function.
22. What is the role of plt.show() after one or more calls to plt.plot()?
(a) It saves the plot to a default file named 'plot.png'.
(b) It closes the current figure and frees up memory.
(c) It renders and displays the accumulated plot elements in a window.
(d) It resets the plot parameters to their default values.
23. You have plotted a graph of 'Temperature vs. Time'. Which Matplotlib functions would you use to label the horizontal and vertical axes respectively?
(a) plt.title() and plt.legend()
(b) plt.xtext() and plt.ytext()
(c) plt.xlabel() and plt.ylabel()
(d) plt.axis_x() and plt.axis_y()
24. What is the effect of calling plt.grid(True) after plotting data with plt.plot()?
(a) It adds a background image to the plot.
(b) It places a grid of lines on the plot for easier data reading.
(c) It aligns the plot with the page grid when printing.
(d) It makes the plot interactive, allowing zoom and pan.
25. When would you typically prefer using plt.plot() over plt.bar() for data visualization?
(a) When showing the distribution of a single categorical variable.
(b) When comparing discrete quantities across different categories.
(c) When visualizing trends or relationships between continuous variables.
(d) When displaying parts of a whole as proportions.
26. Which scenario is best suited for plt.plot() rather than plt.hist()?
(a) Visualizing the frequency distribution of a continuous dataset.
(b) Showing the progression of a machine learning model's loss over epochs.
(c) Analyzing the number of occurrences of values within bins.
(d) Displaying the shape of a probability distribution.
27. Consider the code:
import matplotlib.pyplot as plt
x = [1, 2, 3, 4]
y = [2, 4, 1, 3]
plt.plot(x, y, color='green', linestyle=':', marker='s')
plt.xlabel('Experiment Number')
plt.ylabel('Result Value')
plt.title('Performance Trend')
plt.grid(True)
plt.show()
What will be the appearance of the line in the generated plot?
(a) A solid green line with square markers.
(b) A dotted green line with square markers.
(c) A dashed green line with triangular markers.
(d) A solid blue line with default circular markers.
28. What happens if you pass only one list of numerical values, say data = [10, 20, 15, 25], to plt.plot(data)?
(a) It will raise a ValueError because both x and y values are required.
(b) The list will be used for the y-axis, and the x-axis will automatically be generated as [0, 1, 2, 3].
(c) The list will be used for the x-axis, and the y-axis will be all zeros.
(d) It will plot a single point at (10, 20) and ignore the rest.
29. Which of the following is NOT a valid way to specify a line style in plt.plot()?
(a) linestyle='--'
(b) ls='dotted'
(c) 'line-style'
(d) '-'
30. After creating a plot using plt.plot() and customizing it with labels and title, what is the purpose of using plt.savefig('my_plot.png')?
(a) It displays the plot in a non-interactive window.
(b) It saves the plot data as a CSV file.
(c) It stores the generated image of the plot to a file named 'my_plot.png'.
(d) It exports the plot as a PDF document only.


Topic: Show: show()

Section: Multiple Choice Questions
31. What is the primary purpose of calling plt.show() in a Matplotlib script?
a) To save the generated plot to a file.
b) To display the generated plot on the screen.
c) To clear all previously generated plots from memory.
d) To convert the plot into a specific data format.
32. If a Matplotlib script generates a plot using plt.plot() but does not include plt.show(), what is the typical outcome when run in a non-interactive Python environment (e.g., a standard script)?
a) The plot window will automatically appear and then close immediately.
b) The plot will be generated but will not be displayed on the screen.
c) An error will be raised indicating that show() is missing.
d) The plot data will be printed to the console as text.
33. How does plt.show() typically behave regarding program execution flow when called in a standard Python script?
a) It is a non-blocking call, allowing the script to continue immediately.
b) It is a blocking call, pausing script execution until the plot window is closed.
c) It initiates a background process, and the script terminates.
d) It only executes if the script is run in an interactive shell.
34. Consider a script that creates two separate figures (Figure 1 and Figure 2). If plt.show() is called after creating Figure 1 and again after creating Figure 2, what will happen?
a) Only Figure 2 will be displayed, overwriting Figure 1.
b) Figure 1 will be displayed, and upon closing it, Figure 2 will be displayed.
c) Both Figure 1 and Figure 2 will be displayed simultaneously in a single window.
d) An error will occur because show() cannot be called multiple times.
35. From which Matplotlib module is the show() function most commonly imported as part of a general plotting workflow?
a) matplotlib.image
b) matplotlib.pyplot
c) matplotlib.artist
d) matplotlib.figure
36. Which statement accurately describes the relationship between plt.show() and plt.savefig() when both are used in a script?
a) plt.show() must always be called before plt.savefig() to save the plot correctly.
b) plt.savefig() must always be called before plt.show() to ensure the saved image includes the final state.
c) Calling plt.show() before plt.savefig() may result in a blank image being saved, or the saved image reflecting an earlier state.
d) Calling plt.savefig() after plt.show() is generally recommended, as show() finalizes the plot state.
37. In which of the following environments might a user often see a plot without explicitly calling plt.show()?
a) When running a Python script from the command line without an active display server.
b) When executing code in an Integrated Development Environment (IDE) that doesn't have Matplotlib integration.
c) When working in an interactive Jupyter Notebook or IPython shell, especially with "%matplotlib inline" or "%matplotlib notebook" magic commands.
d) When compiling the Python script into an executable file.
38. After plt.show() displays a plot and the user closes the plot window, what typically happens to the Matplotlib Figure object associated with that plot in a non-interactive script?
a) The Figure object remains active and can be modified for future displays.
b) The Figure object is usually closed and released from memory implicitly.
c) The script will raise an error if any further operations are attempted on the closed figure.
d) The Figure object is serialized and saved to a temporary file.
39. If multiple figures are created in a script without calling plt.show() until the very end, how does a single final plt.show() call handle them?
a) It will only display the very last figure created.
b) It will display all open figures sequentially, one after another, as their windows are closed.
c) It will display all open figures simultaneously in separate windows.
d) It will merge all figures into a single window for display.
40. What is the typical behavior if plotting commands (e.g., plt.plot(), plt.xlabel()) are executed after plt.show() in a non-interactive script that was previously blocking?
a) The changes will be applied to the already displayed plot dynamically.
b) The changes will create a new, separate plot window with the updated content.
c) The changes will not be visible, as plt.show() usually closes the figure and resets the state for the current plot.
d) An error will occur because the plotting context is no longer valid.
41. How does plt.show() relate to the concept of the "current figure" and "current axes" in Matplotlib's state-based interface?
a) It explicitly creates a new current figure and axes, discarding previous ones.
b) It displays the content of the currently active figure and its axes.
c) It automatically selects the largest figure available to display.
d) It only displays figures that have been explicitly named or assigned to a variable.
42. Beyond displaying plots, what is a crucial function of plt.show() related to system resources in a long-running script that generates many plots?
a) It optimizes the rendering process by pre-caching plot data.
b) It helps in releasing resources (like figure windows and associated memory) once plots are viewed and closed.
c) It automatically compresses plot data before display.
d) It synchronizes plot generation across multiple CPU cores.
43. In a script that uses plt.subplot() to create a grid of plots within a single figure, when should plt.show() be called to display all the subplots?
a) After each individual subplot command (e.g., after each ax.plot()).
b) Only once, after all subplots and their content have been defined within the figure.
c) Before any subplot is created, to initialize the display.
d) It is not needed for subplots, as they display automatically.
44. Which of the following commands typically precedes plt.show() in a standard Matplotlib plotting sequence for a simple line graph?
a) plt.close()
b) plt.figure() and plt.plot()
c) plt.waitforbuttonpress()
d) plt.ginput()
45. What interactive capability does plt.show() generally enable for the user with the displayed plot window (assuming a standard backend)?
a) Allowing the user to modify the plot's data values directly.
b) Providing options for zooming, panning, and saving the plot image through the window interface.
c) Automatically generating a report based on the plot.
d) Enabling real-time collaboration with other users on the plot.


Topic: Labels: xlabel(), ylabel()

46. Which of the following Matplotlib functions is used to set the label for the horizontal axis of a plot?
(a) plt.ylabels()
(b) plt.xlabel()
(c) plt.x_axis_label()
(d) plt.horizontal_label()
47. In Matplotlib, what type of argument does the xlabel() function primarily expect to define the axis label?
(a) An integer representing an index
(b) A list of strings for multiple labels
(c) A single string value
(d) A boolean to enable or disable the label
48. Consider the following Python code snippet:
import matplotlib.pyplot as plt
plt.plot([1, 2, 3], [4, 5, 6])
plt.xlabel("X-axis Data")
plt.ylabel("Y-axis Data")
plt.show()
What would happen if the plt.xlabel() and plt.ylabel() lines were omitted from this code?
(a) The plot would not be generated.
(b) The plot would be generated, but without labels on the X and Y axes.
(c) Matplotlib would automatically infer and add default labels.
(d) An error would occur, as axis labels are mandatory.
49. For a plot visualizing machine learning model training loss over epochs, which of the following would be an appropriate use of xlabel() and ylabel()?
(a) plt.xlabel("Loss"); plt.ylabel("Epochs")
(b) plt.xlabel("Epochs"); plt.ylabel("Training Loss")
(c) plt.xlabel("Model Performance"); plt.ylabel("Iteration Count")
(d) plt.xlabel("Features"); plt.ylabel("Target Values")
50. Which function is typically used in conjunction with xlabel() and ylabel() to provide an overall description of the plot?
(a) plt.legend()
(b) plt.grid()
(c) plt.title()
(d) plt.text()
51. When plotting a histogram using plt.hist(), how are xlabel() and ylabel() typically used?
(a) xlabel() labels the bin edges, and ylabel() labels the frequency/count.
(b) xlabel() labels the frequency/count, and ylabel() labels the bin edges.
(c) Neither xlabel() nor ylabel() is applicable to histograms.
(d) They are used to set the plot's title and subtitle, respectively.
52. If you call plt.xlabel("First Label") and then later in the same script call plt.xlabel("Second Label") for the same plot, what will be the final label displayed on the X-axis?
(a) "First Label" will be displayed.
(b) Both "First Label" and "Second Label" will be displayed.
(c) Only "Second Label" will be displayed.
(d) An error will occur due to duplicate calls.
53. Which of the following attributes cannot be directly modified through a parameter within the plt.xlabel() or plt.ylabel() function call itself (without using additional plt.setp() or specific text properties)?
(a) The text of the label.
(b) The font size of the label.
(c) The color of the label.
(d) The font family of the label.
54. In a Matplotlib script, where should plt.xlabel() and plt.ylabel() typically be placed relative to plt.plot() and plt.show() for them to be effective?
(a) Before plt.plot() but after plt.show().
(b) After plt.plot() but before plt.show().
(c) Both before plt.plot() and before plt.show().
(d) Only after plt.show().
55. For a subplot created using plt.subplot(), how do you set the x and y labels for a specific subplot?
(a) Use plt.xlabel() and plt.ylabel() directly after creating the subplot but before switching to another.
(b) Use fig.xlabel() and fig.ylabel() where fig is the figure object.
(c) Use ax.set_xlabel() and ax.set_ylabel() where ax is the Axes object of the subplot.
(d) Labels cannot be set independently for subplots; they apply to the entire figure.
56. When saving a plot to a PDF file using plt.savefig('my_plot.pdf'), what role do xlabel() and ylabel() play?
(a) They are ignored during saving, only appearing in the interactive display.
(b) They are included in the saved PDF image, enhancing its clarity.
(c) They are converted into metadata within the PDF, not visible in the plot.
(d) They can cause the save operation to fail if not properly defined.
57. Which of the following correctly sets the X-axis label to "Time (seconds)" with a font size of 12?
(a) plt.xlabel("Time (seconds)", size=12)
(b) plt.xlabel(text="Time (seconds)", fontsize=12)
(c) plt.xlabel("Time (seconds)").fontsize = 12
(d) plt.xlabel("Time (seconds)", font_size=12)
58. When analyzing a model's performance where `x_data` represents the number of training iterations and `y_data` represents the accuracy, what would be the most descriptive labels for `plt.plot(x_data, y_data)`?
(a) plt.xlabel("Data Points"), plt.ylabel("Metrics")
(b) plt.xlabel("Training Iterations"), plt.ylabel("Accuracy")
(c) plt.xlabel("Features"), plt.ylabel("Labels")
(d) plt.xlabel("X-Axis"), plt.ylabel("Y-Axis")
59. Is it common or generally recommended to use plt.xlabel() and plt.ylabel() for a standard pie chart (plt.pie())?
(a) Yes, absolutely, to label the different slices.
(b) No, because pie charts represent proportions of a whole and typically do not have distinct X and Y axes in the traditional sense.
(c) Only if the pie chart is part of a subplot.
(d) It is optional and depends entirely on the aesthetic preference of the user.
60. Which keyword argument is commonly used in `plt.xlabel()` or `plt.ylabel()` to specify the padding between the label and the axis?
(a) margin
(b) pad
(c) spacing
(d) offset


Topic: Grid: grid()

Section: Multiple Choice Questions
61. What is the primary purpose of the matplotlib.pyplot.grid() function?
(a) To define the limits of the x and y axes.
(b) To display horizontal and vertical lines on the plot for better readability.
(c) To add a title and labels to the plot.
(d) To save the generated plot as an image file.
62. Which argument in the matplotlib.pyplot.grid() function is specifically designed to control the overall visibility of grid lines (True for visible, False for hidden)?
(a) status
(b) enable
(c) show_grid
(d) b
63. To show grid lines only along the y-axis in a Matplotlib plot, which of the following calls to grid() is correct?
(a) plt.grid(axis='y')
(b) plt.grid(axes='y')
(c) plt.grid(orientation='vertical')
(d) plt.grid(side='y')
64. Which parameter in the grid() function allows you to specify the style of the grid lines, such as dashed or dotted?
(a) lineformat
(b) linestyle
(c) linemode
(d) gridstyle
65. By default, what color are the grid lines displayed by plt.grid() if no color argument is explicitly provided?
(a) Black
(b) Blue
(c) Gray
(d) Red
66. If you want to make the grid lines thicker, which argument of the grid() function would you adjust?
(a) thickness
(b) linewidth
(c) width
(d) line_weight
67. Consider a scenario where a plot is created without explicitly calling plt.grid(). What is the default state of grid lines in a typical Matplotlib plot?
(a) Grid lines are always visible by default.
(b) Grid lines are never visible by default.
(c) Grid lines are visible only if major ticks are present.
(d) The default visibility depends on the Matplotlib style sheet in use.
68. When working with multiple subplots using plt.subplot(), how would you apply grid lines to only a specific subplot (e.g., the current active subplot)?
(a) plt.grid() automatically applies to all subplots.
(b) You must call plt.grid() before creating any subplots.
(c) Call plt.grid() after making the desired subplot active.
(d) Use plt.subplot().grid() directly.
69. If you create a plot using plt.plot() and then call plt.grid(True), what will be the effect on the plot?
(a) The grid lines will only appear if plt.grid() was called before plt.plot().
(b) The grid lines will be displayed on top of the plot data, potentially obscuring it.
(c) The grid lines will be displayed underneath the plot data, without affecting data visibility.
(d) An error will occur because grid() must be called before any plotting functions.
70. From a machine learning perspective, what is a key benefit of using grid lines in data visualization?
(a) They reduce the memory footprint of the plot, making it more efficient.
(b) They make it easier to precisely read data point values and estimate trends or distributions.
(c) They automatically normalize the data displayed on the plot, which is useful for comparisons.
(d) They are primarily for aesthetic purposes and have no practical benefit for data analysis.
71. Which combination of arguments would effectively hide the grid lines for the y-axis only, while ensuring they are visible for the x-axis?
(a) plt.grid(axis='y', b=False)
(b) plt.grid(axis='x', b=True) and plt.grid(axis='y', b=False)
(c) plt.grid(axis='both', b=True, axis='y', b=False)
(d) This level of selective control is not directly supported by the grid() function.
72. In Matplotlib's object-oriented interface, if 'ax' is an Axes object, what is the relationship between plt.grid() and ax.grid()?
(a) They are completely independent; plt.grid() has no effect on a specific 'ax' object.
(b) plt.grid() is a convenience function that ultimately calls ax.grid() on the current active Axes.
(c) ax.grid() is a deprecated function; plt.grid() should always be used for modern plots.
(d) ax.grid() can only modify major grid lines, while plt.grid() modifies both major and minor by default.
73. What happens if you call plt.grid(True) multiple times in a script for the same plot without any intermediate calls to plt.grid(False)?
(a) Each subsequent call adds another layer of grid lines, making them visually darker.
(b) Only the first call to plt.grid(True) has an effect; subsequent calls are ignored.
(c) The grid lines are toggled on and off with each call, effectively making them disappear.
(d) Subsequent calls simply ensure the grid remains visible with its current settings or update them if parameters change.
74. When plotting data with a logarithmic scale on one of the axes (e.g., plt.yscale('log')), how does a default call to plt.grid() behave with respect to major and minor grid lines?
(a) It only displays major grid lines corresponding to the logarithmic scale.
(b) It automatically adjusts to show both major and minor grid lines for the logarithmic scale.
(c) Grid lines are entirely disabled when using logarithmic scales to avoid clutter.
(d) Logarithmic scaling only affects the data points, not the grid lines themselves.
75. To set the color of the grid lines to a specific RGB hex code, for example '#FF0000' for red, which argument of the grid() function should be used?
(a) hex_color
(b) color
(c) grid_color
(d) rgb_value


Topic: Bars: bar()

Section: Multiple Choice Questions
76. Which of the following Matplotlib functions is primarily used to display the distribution of categorical data or compare discrete values across different categories?
a) pyplot.plot()
b) pyplot.bar()
c) pyplot.hist()
d) pyplot.scatter()
77. When using matplotlib.pyplot.bar(x, height), what does the 'x' argument typically represent?
a) The numerical values of the bars' heights.
b) The categories or positions on the x-axis for each bar.
c) The width of each individual bar.
d) The color intensity of each bar.
78. Which parameter in the pyplot.bar() function is used to control the thickness of the bars?
a) height
b) align
c) width
d) edgecolor
79. To set the color of the bars in a pyplot.bar() chart to blue, which parameter should be used?
a) bar_color='blue'
b) color='blue'
c) fill='blue'
d) hue='blue'
80. After creating a bar chart with pyplot.bar(), which function from pyplot would you use to add a descriptive label to the horizontal axis?
a) pyplot.title()
b) pyplot.ylabel()
c) pyplot.xlabel()
d) pyplot.text()
81. You have created a bar chart and want to save it as an image file named "my_bar_chart.png". Which function from Matplotlib's pyplot module is most appropriate for this task?
a) pyplot.save_image("my_bar_chart.png")
b) pyplot.export_plot("my_bar_chart.png")
c) pyplot.savefig("my_bar_chart.png")
d) pyplot.write_file("my_bar_chart.png")
82. What is the primary difference in purpose between pyplot.bar() and pyplot.hist()?
a) pyplot.bar() is for continuous data, while pyplot.hist() is for categorical data.
b) pyplot.bar() displays discrete categories, while pyplot.hist() shows the distribution of a single numerical variable by binning data.
c) pyplot.bar() creates horizontal bars, while pyplot.hist() creates vertical bars.
d) pyplot.bar() is used for 3D plots, while pyplot.hist() is for 2D plots.
83. In a Machine Learning context, if you want to visualize the distribution of different classes in a dataset (e.g., how many instances of 'Class A', 'Class B', 'Class C' exist), which Matplotlib plot type is most suitable?
a) Line plot using pyplot.plot()
b) Scatter plot using pyplot.scatter()
c) Bar chart using pyplot.bar()
d) Pie chart using pyplot.pie()
84. To create a bar chart where the bars extend horizontally rather than vertically, which Matplotlib function should be used?
a) pyplot.barv()
b) pyplot.barh()
c) pyplot.horizontal_bar()
d) pyplot.bar(orientation='horizontal')
85. You are creating a dashboard with multiple visualizations. To display two separate bar charts side-by-side within the same figure, which Matplotlib function would you typically use in conjunction with pyplot.bar()?
a) pyplot.grid()
b) pyplot.legend()
c) pyplot.subplot()
d) pyplot.twinx()
86. Consider the code: pyplot.bar(['Apples', 'Oranges'], [10, 15]). What do the values [10, 15] represent in this context?
a) The x-axis positions of the bars.
b) The labels for the x-axis.
c) The heights of the bars.
d) The colors of the bars.
87. Which of the following is a valid way to create a basic bar chart in Matplotlib?
a) plt.bar(height=[1,2,3], labels=['A','B','C'])
b) plt.bar(data=['A','B','C'], values=[1,2,3])
c) plt.bar(x=[1,2,3], y_values=['A','B','C'])
d) plt.bar(['A','B','C'], [1,2,3])
88. By default, when using pyplot.bar(x, height), how are the bars typically aligned with respect to their 'x' positions?
a) The left edge of the bar is at the 'x' position.
b) The right edge of the bar is at the 'x' position.
c) The center of the bar is at the 'x' position.
d) The bars are stretched to fill the available space.
89. A data scientist wants to compare the performance (e.g., accuracy scores) of three different Machine Learning models on a specific dataset. Which type of Matplotlib plot is generally most effective for this comparison?
a) Pie chart
b) Line plot
c) Histogram
d) Bar chart
90. After creating a Matplotlib plot, such as a bar chart, using various pyplot functions, what is the primary purpose of calling pyplot.show()?
a) To save the plot to a file.
b) To close all active plot windows.
c) To render the plot and display it to the user.
d) To reset all plot parameters to their default values.


Topic: Histogram: hist()

Section: Multiple Choice Questions
91. Which of the following best describes the primary purpose of a histogram in data analysis?
a) To show trends over time
b) To display the distribution of a single numerical variable
c) To compare categories of data
d) To visualize relationships between two continuous variables
92. In Matplotlib's pyplot module, which function is specifically designed to create a histogram?
a) plt.plot()
b) plt.bar()
c) plt.hist()
d) plt.scatter()
93. What does the 'bins' parameter in the plt.hist() function primarily control?
a) The color of the histogram bars
b) The number of intervals or ranges into which the data will be divided
c) The width of the entire plot area
d) The label for the x-axis
94. Which statement accurately highlights a key difference between plt.hist() and plt.bar()?
a) plt.hist() is used for categorical data, while plt.bar() is for numerical data.
b) plt.bar() automatically calculates frequencies for bins, while plt.hist() requires pre-calculated frequencies.
c) plt.hist() groups data into bins and shows frequency distribution, while plt.bar() displays the values of distinct categories.
d) plt.hist() can only plot positive values, whereas plt.bar() can handle negative values.
95. When using plt.hist(data, density=True), what does the y-axis typically represent?
a) The raw count or frequency of observations in each bin
b) The percentage of observations in each bin
c) The probability density function value for each bin
d) The cumulative sum of observations
96. Consider a histogram where the majority of bars are concentrated on the left side, with a long tail extending to the right. This distribution is typically described as:
a) Uniformly distributed
b) Negatively skewed (left-skewed)
c) Positively skewed (right-skewed)
d) Normally distributed
97. Which of the following is the standard and recommended way to import the pyplot module from Matplotlib?
a) import matplotlib.pyplot
b) import pyplot as plt
c) from matplotlib import pyplot as plt
d) import matplotlib.pyplot as plt
98. After creating a histogram using plt.hist(), what function is commonly called to display the generated plot?
a) plt.save()
b) plt.display()
c) plt.show()
d) plt.render()
99. To manually define the edges of the bins for a histogram, which parameter of plt.hist() would you use?
a) range
b) bins (by providing an array-like object)
c) edges
d) interval
100. The 'rwidth' parameter in plt.hist() controls:
a) The rotation angle of the x-axis labels.
b) The relative width of the bars as a fraction of the bin width.
c) The total width of the histogram plot.
d) The minimum width for each bin.
101. In the context of Machine Learning data preprocessing, analyzing a histogram can help identify:
a) The optimal hyper-parameters for a model.
b) The presence of outliers or unusual data points.
c) The accuracy score of a classification model.
d) The correlation between two independent features.
102. To display two histograms side-by-side within the same figure, which Matplotlib function would be most appropriate to use in conjunction with plt.hist()?
a) plt.grid()
b) plt.legend()
c) plt.subplot()
d) plt.title()
103. Which function is used to save a Matplotlib plot, such as a histogram, to a file (e.g., PDF, PNG)?
a) plt.storefig()
b) plt.export()
c) plt.savefig()
d) plt.output()
104. When is a histogram generally a more suitable visualization than a simple line plot for understanding the distribution of a single continuous variable?
a) When comparing the values of two different categories.
b) When showing a time series trend.
c) When you want to see the frequency or density of data points across different ranges.
d) When visualizing the relationship between two categorical variables.
105. What happens when the 'cumulative' parameter in plt.hist() is set to True?
a) Each bin shows the total count of observations less than or equal to its upper bound.
b) The histogram bars are stacked on top of each other.
c) The plot displays a normal distribution curve over the bars.
d) The x-axis labels are automatically rotated.


Topic: Subplot: subplot()

Section: Multiple Choice Questions
106. In the call matplotlib.pyplot.subplot(nrows, ncols, index), what does the 'index' parameter represent?
a) The total number of plots in the figure.
b) The unique identifier for the subplot, starting from 0 and increasing row-wise.
c) The unique identifier for the subplot, starting from 1 and increasing column-wise.
d) The unique identifier for the subplot, starting from 1 and increasing row-wise.
107. Which of the following is the return type of the matplotlib.pyplot.subplot() function?
a) A Figure object.
b) An Axes object.
c) A list of Figure objects.
d) A list of Axes objects.
108. You are analyzing the performance of several machine learning models and want to visualize their accuracy over epochs side-by-side for comparison within a single window. Which Matplotlib function is most appropriate for this task?
a) matplotlib.pyplot.plot()
b) matplotlib.pyplot.subplot()
c) matplotlib.pyplot.show()
d) matplotlib.pyplot.bar()
109. Consider the following Matplotlib code snippet:
import matplotlib.pyplot as plt
plt.figure(figsize=(10, 5))
ax1 = plt.subplot(1, 2, 1)
ax2 = plt.subplot(1, 2, 2)
What is the correct way to plot a histogram on the first subplot (ax1)?
a) plt.hist(data)
b) ax1.plot.hist(data)
c) ax1.hist(data)
d) plt.subplot(1, 2, 1).hist(data)
110. A computer engineering diploma student tries to create a 2x2 grid of subplots using plt.subplot(2, 2, 5). What will be the outcome of this call?
a) It will successfully create the fifth subplot in the 2x2 grid.
b) It will create a 3x2 grid of subplots instead.
c) It will raise a ValueError because the index is out of range.
d) It will create the subplot but it will not be visible.
111. If you call plt.subplot(3, 1, 2), how many rows and columns are implicitly defined for the subplot grid, and which subplot position is being selected?
a) 3 rows, 1 column, second subplot.
b) 1 row, 3 columns, second subplot.
c) 3 rows, 1 column, first subplot.
d) 1 row, 3 columns, third subplot.
112. After creating a subplot using ax = plt.subplot(2, 2, 1), how would you typically set the title for only this specific subplot?
a) plt.title("My Subplot Title")
b) ax.set_title("My Subplot Title")
c) ax.title("My Subplot Title")
d) plt.subplot(2, 2, 1).title("My Subplot Title")
113. Which combination of Matplotlib functions allows you to display a bar chart, a histogram, and a pie chart simultaneously in different panels within a single figure?
a) plt.bar(), plt.hist(), plt.pie() without subplot().
b) plt.figure(), plt.subplot(), and then ax.bar(), ax.hist(), ax.pie().
c) plt.subplot() only, with data for all three charts passed at once.
d) plt.plot() for all three types by changing the 'kind' parameter.
114. When using subplot(), if you create multiple subplots in a figure, and then call plt.xlabel() without explicitly referencing an Axes object, to which subplot will the label typically be applied?
a) The first subplot created.
b) The last active subplot.
c) All subplots in the figure.
d) No subplot; it will raise an error.
115. After generating a figure with multiple subplots using subplot() and populating them with data, what is the correct way to save this entire figure (including all subplots) to a PDF file named "multiview.pdf"?
a) plt.savefig("multiview.pdf")
b) ax.savefig("multiview.pdf") where ax is any of the subplot axes.
c) plt.subplot().savefig("multiview.pdf")
d) plt.figure().savefig("multiview.pdf")
116. In the context of machine learning, when would a data scientist most likely use matplotlib.pyplot.subplot() for data visualization?
a) To create a single large plot for a very complex dataset.
b) To show the distribution of multiple features of a dataset using histograms arranged in a grid.
c) To generate separate plot files for each model's performance metric.
d) To animate the training process of a neural network.
117. Consider the following code:
import matplotlib.pyplot as plt
import numpy as np
x = np.linspace(0, 10, 100)
y1 = np.sin(x)
y2 = np.cos(x)
plt.subplot(1, 2, 1)
plt.plot(x, y1)
plt.title("Sine Wave")
plt.subplot(1, 2, 2)
plt.plot(x, y2, color='red')
plt.title("Cosine Wave")
plt.show()
What will be displayed when this code runs?
a) Two separate figure windows, one with a sine wave and one with a cosine wave.
b) A single figure window with a sine wave on the left and a cosine wave on the right.
c) A single figure window with both sine and cosine waves plotted on the same axes.
d) An error due to missing a plt.figure() call.
118. What is the fundamental difference between plt.plot() and ax.plot() when an Axes object 'ax' has been obtained from plt.subplot()?
a) plt.plot() always creates a new figure, while ax.plot() plots on the existing Axes.
b) plt.plot() plots on the currently active Axes, while ax.plot() explicitly plots on the 'ax' Axes.
c) There is no functional difference; they are interchangeable.
d) ax.plot() is only used for 3D plots, whereas plt.plot() is for 2D plots.
119. A student wants to ensure that each subplot in a 2x2 grid has its own independent X and Y labels and grid. How should they manage this using the Axes objects returned by subplot()?
a) Call plt.xlabel(), plt.ylabel(), and plt.grid() after each plt.subplot() call.
b) Call ax.set_xlabel(), ax.set_ylabel(), and ax.grid(True) on each specific Axes object.
c) Call plt.xlabel(), plt.ylabel(), and plt.grid() once at the end, and Matplotlib will automatically apply them independently.
d) This level of independent customization is not possible with subplot(); subplots share common properties.
120. Which Matplotlib function is often used in conjunction with subplot() to create a grid of subplots where each subplot shares the same X or Y axis for better comparison (e.g., when plotting time series data)?
a) plt.figure()
b) plt.twinx()
c) plt.subplots() (note the 's')
d) plt.tight_layout()


Topic: pie chart: pie()

Section: Multiple Choice Questions
121.  Which Matplotlib function is primarily used to create a pie chart?
(a) plt.plot()
(b) plt.pie()
(c) plt.bar()
(d) plt.hist()
122.  In Matplotlib's plt.pie() function, what is the purpose of the 'labels' parameter?
(a) To set the title of the pie chart.
(b) To label individual wedges with descriptive text.
(c) To add a legend to the chart.
(d) To define the values for each wedge.
123.  Which of the following scenarios is generally best suited for visualizing with a pie chart?
(a) Showing the trend of stock prices over time.
(b) Comparing the distribution of several categories as parts of a whole.
(c) Displaying the correlation between two continuous variables.
(d) Visualizing the frequency distribution of a single numerical feature.
124.  To display the percentage value on each slice of a pie chart, which parameter of the plt.pie() function should be used?
(a) percentage
(b) showpct
(c) autopct
(d) values_percent
125.  What is the effect of the 'explode' parameter in plt.pie()?
(a) It rotates the starting angle of the first wedge.
(b) It determines the color scheme for the wedges.
(c) It specifies the fraction of the radius with which to offset each wedge.
(d) It adds a shadow effect to the pie chart.
126.  If you want to customize the colors of the wedges in a pie chart, which parameter of plt.pie() would you use?
(a) edgecolor
(b) facecolor
(c) colors
(d) cmap
127.  After creating a pie chart using plt.pie(), which Matplotlib function is typically called to display the chart?
(a) plt.display()
(b) plt.render()
(c) plt.show()
(d) plt.view()
128.  Consider a dataset where the sum of values passed to plt.pie() is not 100. How does plt.pie() handle this?
(a) It raises an error, requiring values to sum to 100.
(b) It automatically normalizes the values so they represent parts of a whole.
(c) It displays the chart but truncates any values that exceed 100.
(d) It only displays the first few wedges until their sum reaches 100.
129.  Which argument to the plt.pie() function controls the starting angle of the first wedge, measured counterclockwise from the x-axis?
(a) start_angle
(b) initial_angle
(c) angle_start
(d) startangle
130.  When is a pie chart generally considered less effective for data visualization compared to a bar chart?
(a) When showing proportions for only two categories.
(b) When comparing many categories with very similar proportions.
(c) When the exact numerical values are less important than the overall distribution.
(d) When visualizing the distribution of a continuous variable.
131.  To save a generated pie chart as a PDF file, which Matplotlib function would you use after calling plt.pie() and plt.show()?
(a) plt.save_chart("pie.pdf")
(b) plt.export("pie.pdf")
(c) plt.savefig("pie.pdf")
(d) plt.write_fig("pie.pdf")
132.  You want to create two pie charts side-by-side in the same figure. Which Matplotlib function is essential for arranging multiple plots in this manner?
(a) plt.grid()
(b) plt.subplot()
(c) plt.figure()
(d) plt.layout()
133.  Which of the following correctly sets up the 'autopct' parameter to display percentages with one decimal place, followed by a percentage sign?
(a) autopct='%.1f'
(b) autopct='%1.1f%%'
(c) autopct=lambda p: f'{p:.1f}%'
(d) Both (b) and (c) are valid ways to achieve this.
134.  In the context of machine learning, a pie chart is most effectively used for:
(a) Visualizing the performance of a regression model.
(b) Showing the distribution of features in a high-dimensional dataset.
(c) Illustrating the class imbalance in a classification dataset.
(d) Plotting the training loss over epochs.
135.  What is a common limitation of using pie charts?
(a) They cannot display negative values.
(b) It is difficult to accurately compare sizes of many small wedges.
(c) They are not suitable for displaying categorical data.
(d) They always require percentages to be manually calculated beforehand.


Topic: Save the plotted images into pdf: savefig()

Section: Multiple Choice Questions
136. Which of the following Matplotlib functions is used to save the currently active figure to a file?
(a) plt.export()
(b) plt.saveplot()
(c) plt.savefig()
(d) plt.savefigure()
137. If you call plt.savefig('my_plot') without specifying a file extension, what is the most common default file format Matplotlib will use to save the image?
(a) PNG
(b) JPG
(c) PDF
(d) SVG
138. To save a Matplotlib plot with a higher resolution, which parameter of the plt.savefig() function should be adjusted?
(a) quality
(b) resolution
(c) dpi
(d) scale
139. Consider the following sequence of Matplotlib commands:
plt.plot([1, 2, 3])
plt.show()
plt.savefig('my_plot.png')
What will be the outcome regarding the saved image?
(a) The plot will be saved successfully, but it will be an empty image because plt.show() closes the figure.
(b) The plot will be saved successfully with the data, as plt.show() does not clear the figure.
(c) An error will occur because plt.savefig() must be called before plt.show().
(d) The plot will be saved, but it might not contain all elements rendered due to asynchronous execution.
140. Which parameter in plt.savefig() is used to prevent extra white space around the saved figure and make it fit snugly to the plot elements?
(a) crop_inches='tight'
(b) bbox_inches='tight'
(c) padding='none'
(d) border_size='0'
141. Which of the following file formats is generally NOT supported for saving plots using plt.savefig() by default without additional backend installations?
(a) PNG
(b) JPEG
(c) GIF
(d) PDF
142. If you have created multiple subplots using plt.subplot() within a single figure, and then call plt.savefig('combined_plots.pdf'), what will be saved?
(a) Only the last active subplot will be saved.
(b) An error will occur as subplots cannot be saved together this way.
(c) All subplots within the current figure will be saved into one PDF file.
(d) Each subplot will be saved as a separate page within the PDF.
143. In a machine learning project, why might you prefer using plt.savefig() over plt.show() during model training or evaluation?
(a) plt.savefig() executes faster than plt.show() for real-time analysis.
(b) plt.savefig() allows for interactive manipulation of the plot, which is useful during training.
(c) plt.savefig() enables automated generation of visual reports and comparison across different model runs without manual intervention.
(d) plt.savefig() automatically clears the figure after saving, which is efficient for memory management.
144. After calling plt.savefig('output.png'), if you then call plt.clf() and then plt.savefig('another_output.png'), what will be the content of 'another_output.png'?
(a) A copy of the 'output.png' content, as plt.clf() only clears the active figure for display.
(b) An empty plot, as plt.clf() clears the current figure's content.
(c) A plot with default Matplotlib axes but no data, as plt.clf() resets everything.
(d) An error will occur because you cannot save an empty plot.
145. You are working with a Matplotlib figure object named 'fig' (e.g., fig = plt.figure()). To save this specific figure object to a file, which is the correct approach?
(a) plt.savefig('my_figure.png') while 'fig' is the active figure.
(b) fig.savefig('my_figure.png')
(c) plt.save(fig, 'my_figure.png')
(d) fig.export('my_figure.png')
146. What happens if you attempt to save a plot to a non-existent directory using plt.savefig('/non_existent_dir/my_plot.png')?
(a) Matplotlib will automatically create the directory and save the plot.
(b) The plot will be saved to the current working directory instead.
(c) A FileNotFoundError or similar exception will be raised.
(d) The command will execute without error, but no file will be saved.
147. To save a Matplotlib plot with a transparent background, which argument should be passed to the plt.savefig() function?
(a) alpha=0
(b) background='transparent'
(c) transparent=True
(d) bgcolor='none'
148. Consider a Python script that generates several plots. After each plot is generated and saved using plt.savefig(), what is a good practice to prevent memory leaks and ensure subsequent plots are generated on a fresh canvas?
(a) Call plt.close('all') after each plt.savefig().
(b) Call plt.hold(False) after each plt.savefig().
(c) Call plt.clear_all() after each plt.savefig().
(d) Call plt.reset_figure() after each plt.savefig().
149. If you save a plot as 'plot.svg' using plt.savefig('plot.svg'), what is the primary advantage of this format over 'plot.png' for presentation in a report?
(a) SVG files are typically smaller in file size than PNGs.
(b) SVG files maintain vector graphics quality when scaled to different sizes, while PNGs become pixelated.
(c) SVG files load faster in web browsers than PNG files.
(d) SVG files can directly embed interactive elements, which PNGs cannot.
150. When is the `pad_inches` parameter of `plt.savefig()` particularly useful?
(a) To specify the dimensions of the saved image in inches.
(b) To control the padding around the figure's bounding box when `bbox_inches='tight'` is used.
(c) To add extra spacing between subplots within a figure.
(d) To define the margin between the plot area and the figure edges.


Topic: Summary And Revision

151. Which Matplotlib function is used to display the currently active plot window?
(a) plt.render()
(b) plt.show()
(c) plt.display()
(d) plt.view()
152. To create a simple line plot of data points (x, y), which Matplotlib.pyplot function would you use?
(a) plt.bar(x, y)
(b) plt.hist(x)
(c) plt.plot(x, y)
(d) plt.scatter(x, y)
153. Which function is used to add a label to the horizontal (x) axis of a plot in Matplotlib?
(a) plt.ylabel()
(b) plt.title()
(c) plt.xlabel()
(d) plt.legend()
154. What is the primary purpose of calling plt.grid(True) in Matplotlib?
(a) To disable axis ticks.
(b) To display a grid on the plot for better readability.
(c) To clear the current plot.
(d) To set the plot background color.
155. Which Matplotlib function is typically used to create a bar chart, representing categories with rectangular bars?
(a) plt.pie()
(b) plt.hist()
(c) plt.bar()
(d) plt.plot()
156. When visualizing the distribution of a single numerical variable by dividing it into bins and counting observations in each bin, which Matplotlib function is most appropriate?
(a) plt.bar()
(b) plt.pie()
(c) plt.hist()
(d) plt.plot()
157. To create multiple plots within the same figure window, which Matplotlib function is commonly used?
(a) plt.figure()
(b) plt.show()
(c) plt.subplot()
(d) plt.grid()
158. After creating a plot, which Matplotlib function allows you to save the generated image to a file (e.g., PDF, PNG)?
(a) plt.export()
(b) plt.save()
(c) plt.savefig()
(d) plt.write()
159. A pie chart is best suited for visualizing which type of data?
(a) Trends over time for multiple variables.
(b) Distribution of a single categorical variable as parts of a whole.
(c) Relationship between two continuous variables.
(d) Frequency distribution of a continuous variable.
160. If you call plt.plot([1, 2, 3, 4]) in Matplotlib, what will be the default values used for the x-axis?
(a) [1, 2, 3, 4]
(b) [0, 1, 2, 3]
(c) [0, 0, 0, 0]
(d) The plot will not be generated due to missing x-values.
161. What is the fundamental difference between plt.bar() and plt.hist() in Matplotlib?
(a) plt.bar() plots continuous data, while plt.hist() plots discrete data.
(b) plt.bar() requires two lists (x, y), while plt.hist() takes one list and automatically bins data.
(c) plt.bar() is used for 3D plots, while plt.hist() is for 2D plots.
(d) plt.bar() always shows vertical bars, while plt.hist() always shows horizontal bars.
162. To set the label for the vertical (y) axis of a Matplotlib plot, which function should be used?
(a) plt.xlabel()
(b) plt.label_y()
(c) plt.ylabel()
(d) plt.set_yaxis_label()
163. The Matplotlib.pyplot module is most commonly imported with which alias for convenience?
(a) import matplotlib.pyplot as mp
(b) import matplotlib.pyplot as pl
(c) import matplotlib.pyplot as mat
(d) import matplotlib.pyplot as plt
164. In the broader context of Python libraries suitable for Machine Learning, what is Matplotlib's primary role?
(a) To perform numerical computations and array operations.
(b) To implement machine learning algorithms directly.
(c) To provide tools for data visualization and graphical representation.
(d) To handle data manipulation and cleaning.
165. When using plt.savefig('my_plot.pdf'), what is the expected return value of the savefig() function if successful?
(a) A boolean True.
(b) The file path of the saved image.
(c) None.
(d) An integer indicating the number of bytes written.


